%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 et
[
 %% Riak Core config
 {riak_core, [
              %% Default location of ringstate
              {ring_state_dir, "<%= @data_dir %>/ring"},

              {http, [{"0.0.0.0", 8098}]},

              %% riak_handoff_port is the TCP port that Riak uses for
              %% intra-cluster data handoff.
              {handoff_port, 8099 },
              
              {disable_http_nagle, <%= @disable_http_nagle %>}
             ]},

 %% Riak KV config
 {riak_kv, [
            %% Storage_backend specifies the Erlang module defining the storage
            %% mechanism that will be used on this node.
            {storage_backend, <%= @storage_backend %>},

            <% if @erlang_paths -%>
            {add_paths, <%= @erlang_paths %>},
            <% end %>

            %% pb_ip is the IP address that the Riak Protocol Buffers interface
            %% will bid to.  If this is undefined, the interface will not run.
            {pb_ip,   "0.0.0.0" },

            %% pb_port is the TCP port that the Riak Protocol Buffers interface
            %% will bind to
            {pb_port, 8087 },

            %% raw_name is the first part of all URLS used by the Riak raw HTTP
            %% interface.  See riak_web.erl and raw_http_resource.erl for
            %% details.
            %{raw_name, "riak"},

            %% mapred_name is URL used to submit map/reduce requests to Riak.
            {mapred_name, "mapred"},

            %% js_vm_count is the number of Javascript VMs to start per Riak
            %% node.  8 is a good default for smaller installations. A larger
            %% number like 12 or 16 is appropriate for installations handling
            %% lots of map/reduce processing.
            {map_js_vm_count, <%= @js_vm_count %>},
            {reduce_js_vm_count, <%= @js_vm_count %>},
            {hook_js_vm_count, <%= @js_vm_count %>},

            %% js_max_vm_mem is the maximum amount of memory, in megabytes,
%% allocated to the Javascript VMs. If unset, the default is
            %% 8MB.
            {js_max_vm_mem, <%= @js_max_vm_mem %>},

            %% js_thread_stack is the maximum amount of thread stack, in megabyes,
            %% allocate to the Javascript VMs. If unset, the default is 16MB.
            %% NOTE: This is not the same as the C thread stack.
            {js_thread_stack, <%= @js_thread_stack %>},

            %% js_source_dir should point to a directory containing Javascript
            %% source files which will be loaded by Riak when it initializes
            %% Javascript VMs.
            {js_source_dir, "<%= @js_source_dir %>"},

            {map_cache_size, <%= @map_cache_size %>},
            %% vnode_mr_timeout controls how much time Riak will permit a map
            %% function to execute on a given vnode before trying another vnode.
            %% Value is in milliseconds and defaults to 1000ms if not set.
            {vnode_mr_timeout, <%= @vnode_mr_timeout %>},

            %% riak_stat enables the use of the "riak-admin status" command to
            %% retrieve information the Riak node for performance and debugging needs
            {riak_kv_stat, true}
           ]},

 %% Bitcask Config
<% if @storage_backend == "riak_kv_bitcask_backend" -%>
 {bitcask, [
            {data_root, "<%= @data_root %>"},
            {max_file_size, <%= @max_file_size %>},
            {sync_strategy, <%= @sync_strategy %>},
            {merge_window, <%= @merge_window %>},
            {frag_merge_trigger, <%= @frag_merge_trigger %>},
            {dead_bytes_merge_trigger, <%= @dead_bytes_merge_trigger %>},
            {frag_threshold, <%= @frag_threshold %>},
            {dead_bytes_threshold, <%= @dead_bytes_threshold %>},
            {small_file_threshold, <%= @small_file_threshold %>},
            {expiry_secs, <%= @expiry_secs %>}
           ]},
<% elsif @storage_backend == "innostore_riak" -%>
 {innostore, [
              {log_buffer_size, <%= @innostore[:log_buffer_size] %>},
              {log_files_in_group, <%= @innostore[:log_files_in_group] %>},
              {log_file_size, <%= @innostore[:log_file_size] %>},
              {flush_log_at_trx_commit, <%= @innostore[:flush_log_at_trx_commit] %>},
              {data_home_dir, "<%= @innostore[:data_home_dir] %>"},
              {log_group_home_dir, "<%= @innostore[:log_group_home_dir]%>"},
              {buffer_pool_size, <%= @innostore[:buffer_pool_size] %>}
             ]},
<% end %>
 %% Luwak Config
 {luwak, [
             {enabled, <%= @luwak %>}
         ]},

 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "/var/log/riak/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "/var/log/rial/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
         ]}
].

